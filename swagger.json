{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "Horses API",
    "version": "1.0.0"
  },
  "host": "cse-341-adolin.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Stables",
      "description": "endpoints for stables"
    },
    {
      "name": "home",
      "description": "homepage & profile"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "home"
        ],
        "summary": "Homepage.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "home"
        ],
        "summary": "profile.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/stables/": {
      "get": {
        "tags": [
          "Stables"
        ],
        "summary": "Displays an array of Stables document.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Stables"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Stables"
        ],
        "summary": "Create new stable.",
        "description": "Requires authentication.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Stables data. Change values to work.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createStable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/mongoDbId"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict/Duplicate",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/stables/inventory": {
      "get": {
        "tags": [
          "Stables"
        ],
        "summary": "Displays sum of numberOfHorses of stables documents.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Stables"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/stables/{id}": {
      "get": {
        "tags": [
          "Stables"
        ],
        "summary": "Get stable by id.",
        "description": "Provide valid mongodb Id for successful operation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Stables"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Stables"
        ],
        "summary": "Update a stable.",
        "description": "Requires authentication and valid mongodbId.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/mongoDbId"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Conflict/Duplicate",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Stables"
        ],
        "summary": "Delete a stable.",
        "description": "Requires authentication and valid mongodbId.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/successDelete"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/stables/order": {
      "post": {
        "tags": [
          "Stables"
        ],
        "summary": "Create new order.",
        "description": "Requires authentication.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "order information. Change values to work.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/placeOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/mongoDbId"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict/Duplicate",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/breeds/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "breedName": {
                  "example": "any"
                },
                "color": {
                  "example": "any"
                },
                "height": {
                  "example": "any"
                },
                "weight": {
                  "example": "any"
                },
                "type": {
                  "example": "any"
                },
                "origin": {
                  "example": "any"
                },
                "features": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/breeds/{id}": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "breedName": {
                  "example": "any"
                },
                "color": {
                  "example": "any"
                },
                "height": {
                  "example": "any"
                },
                "weight": {
                  "example": "any"
                },
                "type": {
                  "example": "any"
                },
                "origin": {
                  "example": "any"
                },
                "features": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/owners/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "emailAddress": {
                  "example": "any"
                },
                "phone": {
                  "example": "any"
                },
                "mailingAddress": {
                  "example": "any"
                },
                "numberOfHorses": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/owners/{id}": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "emailAddress": {
                  "example": "any"
                },
                "phone": {
                  "example": "any"
                },
                "mailingAddress": {
                  "example": "any"
                },
                "numberOfHorses": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/diet/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "feedtype": {
                  "example": "any"
                },
                "brand": {
                  "example": "any"
                },
                "product": {
                  "example": "any"
                },
                "source": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "size": {
                  "example": "any"
                },
                "deliveryTime": {
                  "example": "any"
                },
                "benefits": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/diet/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "feedtype": {
                  "example": "any"
                },
                "brand": {
                  "example": "any"
                },
                "product": {
                  "example": "any"
                },
                "source": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "size": {
                  "example": "any"
                },
                "deliveryTime": {
                  "example": "any"
                },
                "benefits": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Stables": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "642d2fc54ba6769cf0c8162c"
          },
          "name": {
            "type": "string",
            "example": "Haley's Horse Heaven"
          },
          "location": {
            "type": "string",
            "example": "Chantilly, VA"
          },
          "numberOfHorses": {
            "type": "number",
            "example": 38
          },
          "owner": {
            "type": "string",
            "example": "Haley Comet"
          },
          "__v": {
            "type": "number",
            "example": 0
          }
        }
      }
    },
    "createStable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Haley's Horse Heaven"
        },
        "location": {
          "type": "string",
          "example": "Chantilly, VA"
        },
        "numberOfHorses": {
          "type": "number",
          "example": 38
        },
        "owner": {
          "type": "string",
          "example": "Haley Comet"
        }
      }
    },
    "mongoDbId": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "<mongo_db_id>"
        }
      }
    },
    "placeOrder": {
      "type": "object",
      "properties": {
        "horseId": {
          "type": "string",
          "example": "640cac644be6e1bbfa31a3sx"
        },
        "stablesId": {
          "type": "string",
          "example": "640cac644be6e1bbfa31a3sx"
        }
      }
    },
    "successDelete": {
      "type": "object",
      "properties": {
        "acknowledged": {
          "type": "boolean",
          "example": true
        },
        "deletedCount": {
          "type": "number",
          "example": 1
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Error message"
        }
      }
    }
  }
}